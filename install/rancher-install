#!/bin/sh

set -e

# CONFIRM THAT CLUSTER HAS NOT ALREADY BEEN BUILT BEFORE PROCEEDING
export KUBECONFIG=$(pwd)/kube_config_rancher-cluster.yml

if [ ! -f kube_config_rancher-cluster.yml ]
then
  echo "Launching install..."
elif kubectl get all | grep kubernetes
     then
     echo "Checking to see if cluster is installed"
     if [ $? -eq 0 ]
       then echo "Cluster has already been installed"
       exit 1
     else
       echo "Contuing with installation..."
     fi
else
  echo "Cluster has already been installed"
  exit 1
fi

echo "Installing Kubernetes"
rke up --config ./rancher-cluster.yml

echo "Set kubeconfig context"
export KUBECONFIG=$(pwd)/kube_config_rancher-cluster.yml

echo "Initializing Helm"
# Create Helm service account
kubectl -n kube-system create serviceaccount tiller

#Create Helm role
kubectl create clusterrolebinding tiller \
  --clusterrole cluster-admin \
  --serviceaccount=kube-system:tiller

# Initialize tiller
helm init --service-account tiller
echo "...pausing for 30 seconds while tiller is installed in cluster"
sleep 30

echo "Adding Rancher Helm chart"
# Pulls down Rancher chart
helm repo add rancher-stable https://releases.rancher.com/server-charts/stable

echo "What hostname would you like to set for your Rancher cluster?"
# Registers hostname that will be used to create Lets Encrypt cert
read rancherhostname

read -p "Is $rancherhostname correct?" yn

case $yn in
    [Yy]* ) echo "Yeehaw!";;
    [Nn]* ) exit;;
esac

echo "What email address would you like to set for your Let's Encrypt certificate?"
# Registers hostname that will be used to create Lets Encrypt cert
read email

read -p "Is $email correct?" ynemail

case $ynemail in
    [Yy]* ) echo "Yeehaw!";;
    [Nn]* ) exit;;
esac

echo "Installing cert-manager"

kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.6/deploy/manifests/00-crds.yaml

sleep 10

helm install stable/cert-manager \
  --name cert-manager \
  --namespace cert-manager \
  --version v0.6.6

sleep 10

echo "Installing Rancher"
helm install rancher-stable/rancher \
  --name rancher \
  --namespace cattle-system \
  --set hostname=$rancherhostname \
  --set ingress.tls.source=letsEncrypt \
  --set letsEncrypt.email=$email

read -p "Delete file generated by Terraform?" cleanup

case $cleanup in
    [Yy]* ) rm rancher-cluster.yml;;
    [Nn]* ) echo "Your Rancher cluster is ready!" && exit 0;;
esac

echo "Your Rancher cluster is ready!"
exit 0
